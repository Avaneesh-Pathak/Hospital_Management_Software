# Generated by Django 5.2.2 on 2025-06-13 07:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "asset_type",
                    models.CharField(
                        choices=[
                            ("Medical Equipment", "Medical Equipment"),
                            ("Furniture", "Furniture"),
                            ("Electronics", "Electronics"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("purchase_date", models.DateField()),
                ("warranty_expiry", models.DateField()),
                ("quantity", models.PositiveIntegerField()),
                (
                    "location",
                    models.CharField(
                        help_text="Where is this asset located?", max_length=255
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Diluent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="IPD",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("admitted_on", models.DateTimeField(auto_now_add=True)),
                ("discharge_date", models.DateTimeField(blank=True, null=True)),
                ("reason_for_admission", models.TextField(blank=True, null=True)),
                ("bed_number", models.IntegerField(blank=True, null=True)),
                (
                    "bed_price_per_day",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2, default=0.0, editable=False, max_digits=10
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Medicine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("brand", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "medicine_type",
                    models.CharField(
                        choices=[
                            ("syrup", "Syrup"),
                            ("injection", "Injection"),
                            ("tablet", "Tablet"),
                            ("drop", "Drop"),
                            ("suspension", "Suspension"),
                            ("fluid", "Fluid"),
                            ("oral", "Oral"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "route",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("oral", "Oral"),
                            ("iv", "Intravenous"),
                            ("im", "Intramuscular"),
                            ("sc", "Subcutaneous"),
                            ("topical", "Topical"),
                            ("inhalation", "Inhalation"),
                            ("nasal", "Nasal"),
                            ("rectal", "Rectal"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "duration",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("24H", "Once daily (Every 24 hours)"),
                            ("12H", "Twice daily (Every 12 hours)"),
                            ("8H", "Thrice daily (Every 8 hours)"),
                            ("6H", "Four times daily (Every 6 hours)"),
                            ("4H", "Every 4 hours"),
                            ("SOS", "As needed (SOS)"),
                            ("STAT", "Immediately (STAT)"),
                            ("PRN", "Pro re nata (As required)"),
                            ("OTHER", "Other (Specify)"),
                        ],
                        help_text="Duration in days",
                        null=True,
                    ),
                ),
                (
                    "is_liquid_injection",
                    models.BooleanField(
                        default=False,
                        help_text="Only for injections: Check if this is a ready-to-use liquid injection",
                    ),
                ),
                (
                    "standard_dose_per_kg",
                    models.FloatField(
                        blank=True,
                        help_text="Standard dose per kg (mg/kg/day)",
                        null=True,
                    ),
                ),
                (
                    "tablet_strength",
                    models.FloatField(
                        blank=True,
                        help_text="Standard dose per kg (mg/kg/day)",
                        null=True,
                    ),
                ),
                (
                    "concentration_mg_per_ml",
                    models.FloatField(
                        blank=True,
                        help_text="Concentration of the medicine (mg/mL)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("room_number", models.CharField(max_length=10, unique=True)),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("picu", "PICU"),
                            ("private", "Private"),
                            ("general", "General Ward"),
                            ("nicu", "NICU"),
                            ("icu", "ICU"),
                            ("emergency", "Emergency Ward"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("total_beds", models.IntegerField(default=1, null=True)),
                ("available_beds", models.IntegerField(default=1, null=True)),
                (
                    "bed_price_per_day",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("occupied_beds", models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name="Vial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "size",
                    models.FloatField(
                        help_text="Size of the vial (e.g., 1000, 500, 250, etc.)"
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[("mg", "mg"), ("ml", "mL")],
                        default="mg",
                        help_text="Unit (mg or mL)",
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "contact_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("doctor", "Doctor"),
                            ("nurse", "Nurse"),
                            ("staff", "Staff"),
                        ],
                        default="staff",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="customuser_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customuser_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Balance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "carryover_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Daybook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "activity",
                    models.CharField(
                        choices=[
                            ("pantry", "Pantry"),
                            ("fuel", "Fuel"),
                            ("office_expense", "Office Expense"),
                            ("site_development", "Site Development"),
                            ("site_visit", "Site Visit"),
                            ("printing", "Printing"),
                            ("utility", "Utility"),
                            ("others", "Others"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "custom_activity",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("remark", models.TextField(blank=True, null=True)),
                (
                    "current_balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=15),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("specialization", models.CharField(max_length=255)),
                ("contact_number", models.CharField(max_length=15)),
                (
                    "availability",
                    models.CharField(default="9 AM - 5 PM", max_length=255),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=100)),
                ("contact_number", models.CharField(max_length=15)),
                ("hired_date", models.DateField(default=django.utils.timezone.now)),
                (
                    "salary",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("last_payment_date", models.DateField(blank=True, null=True)),
                ("next_due_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IPDBilling",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bill_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("generated_date", models.DateTimeField(auto_now_add=True)),
                ("due_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("generated", "Generated"),
                            ("paid", "Paid"),
                            ("partially_paid", "Partially Paid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "paid_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "balance_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "room_charges",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "nursing_charges",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "procedure_charges",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "medication_charges",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "lab_charges",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "other_charges",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "ipd_admission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="hms.ipd"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "license_type",
                    models.CharField(
                        choices=[
                            ("Medical", "Medical"),
                            ("Pharmacy", "Pharmacy"),
                            ("Fire Safety", "Fire Safety"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("issue_date", models.DateField()),
                ("expiry_date", models.DateField()),
                (
                    "document",
                    models.FileField(blank=True, null=True, upload_to="licenses/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Active", "Active"),
                            ("Expired", "Expired"),
                            ("Pending Renewal", "Pending Renewal"),
                        ],
                        default="Active",
                        max_length=50,
                    ),
                ),
                (
                    "renewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Maintenance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("maintenance_date", models.DateField()),
                ("next_due_date", models.DateField()),
                ("notes", models.TextField(blank=True)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maintenance_logs",
                        to="hms.asset",
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MedicineVial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "strength_mg",
                    models.FloatField(help_text="Total mg in the vial (e.g., 500)"),
                ),
                (
                    "volume_ml",
                    models.FloatField(help_text="Total mL in the vial (e.g., 2)"),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vials",
                        to="hms.medicine",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NICUVitals",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("time", models.TimeField(default=django.utils.timezone.now)),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=4, null=True
                    ),
                ),
                ("respiratory_rate", models.IntegerField(blank=True, null=True)),
                ("pulse_rate", models.IntegerField(blank=True, null=True)),
                (
                    "cft",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "skin_color",
                    models.CharField(
                        choices=[
                            ("pink", "Pink (Normal)"),
                            ("pallor", "Pallor (Pale)"),
                            ("jaundiced", "Jaundiced (Yellowish)"),
                            ("cyanotic", "Cyanotic (Bluish)"),
                            ("mottled", "Mottled (Blotchy)"),
                            ("erythematous", "Erythematous (Red/Flushed)"),
                            ("grayish", "Grayish"),
                            ("dusky", "Dusky (Bluish-Gray)"),
                        ],
                        default="pink",
                        max_length=20,
                    ),
                ),
                ("seizure", models.BooleanField(blank=True, null=True)),
                ("spo2", models.IntegerField(blank=True, null=True)),
                (
                    "oxygen",
                    models.CharField(
                        blank=True,
                        help_text="Options: 1. Nasal Prong, 2. Hood, 3. Without O2",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("retraction", models.BooleanField(blank=True, null=True)),
                ("iv_fluids", models.IntegerField(blank=True, null=True)),
                ("by_nasogastric", models.IntegerField(blank=True, null=True)),
                ("oral", models.IntegerField(blank=True, null=True)),
                ("breastfeeding", models.BooleanField(blank=True, null=True)),
                (
                    "urine",
                    models.CharField(
                        choices=[("nil", "Nil"), ("ml", "ML")], max_length=10
                    ),
                ),
                ("urine_value", models.FloatField(blank=True, null=True)),
                ("stool", models.BooleanField(blank=True, null=True)),
                ("ift", models.IntegerField(blank=True, null=True)),
                ("vomiting", models.BooleanField(blank=True, null=True)),
                (
                    "ipd",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nicu_vitals",
                        to="hms.ipd",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Nurse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nurse_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OPD",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("visit_date", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("diagnosis", models.TextField()),
                ("symptoms", models.TextField(blank=True, null=True)),
                ("prescription", models.TextField(blank=True, null=True)),
                ("follow_up_date", models.DateField(blank=True, null=True)),
                (
                    "visit_type",
                    models.CharField(
                        choices=[
                            ("new", "New Visit"),
                            ("follow_up", "Follow-up Visit"),
                            ("emergency", "Emergency Visit"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opd_visits",
                        to="hms.doctor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OPDBilling",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bill_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("generated_date", models.DateTimeField(auto_now_add=True)),
                ("due_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("generated", "Generated"),
                            ("paid", "Paid"),
                            ("partially_paid", "Partially Paid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "paid_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "balance_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "consultation_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "procedure_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "medication_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "other_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("is_paid", models.BooleanField(default=False)),
                (
                    "opd_visit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="hms.opd"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BillingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "billing_type",
                    models.CharField(
                        choices=[("opd", "OPD"), ("ipd", "IPD")], max_length=10
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "tax_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, editable=False, max_digits=10
                    ),
                ),
                (
                    "ipd_billing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hms.ipdbilling",
                    ),
                ),
                (
                    "opd_billing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hms.opdbilling",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "patient_code",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=35,
                        null=True,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("age", models.TextField(blank=True, null=True)),
                (
                    "contact_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "aadhar_number",
                    models.CharField(
                        blank=True,
                        max_length=12,
                        null=True,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(12)],
                    ),
                ),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                ("allergies", models.TextField(blank=True, null=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "emergency_contact_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("father", "Father"),
                            ("mother", "Mother"),
                            ("son", "Son"),
                            ("daughter", "Daughter"),
                            ("spouse", "Spouse"),
                            ("friend", "Friend"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "accompanying_person_address",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="patient_profiles/"
                    ),
                ),
                (
                    "assigned_doctor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="patients",
                        to="hms.doctor",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="opdbilling",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="hms.patient"
            ),
        ),
        migrations.AddField(
            model_name="opd",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="opd_visits",
                to="hms.patient",
            ),
        ),
        migrations.AddField(
            model_name="ipdbilling",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="hms.patient"
            ),
        ),
        migrations.AddField(
            model_name="ipd",
            name="patient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="hms.patient"
            ),
        ),
        migrations.CreateModel(
            name="FluidRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "birth_weight_category",
                    models.CharField(
                        choices=[("≤1500g", "≤1500g"), (">1500g", ">1500g")],
                        max_length=20,
                    ),
                ),
                ("day_after_birth", models.IntegerField()),
                ("fluid_ml_per_kg_per_day", models.FloatField()),
                ("calculated_ml", models.FloatField(blank=True, null=True)),
                (
                    "calculated_ml_hr",
                    models.FloatField(blank=True, editable=False, null=True),
                ),
                (
                    "ipd_admission",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fluid_requirements",
                        to="hms.ipd",
                    ),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        limit_choices_to={"medicine_type": "fluid"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fluid_requirements",
                        to="hms.medicine",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hms.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Expense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("medicine", "Medicine"),
                            ("injection", "Injection"),
                            ("resource", "Resource"),
                            ("doctor_fee", "Doctor Fee"),
                            ("surgery", "Surgery"),
                            ("checkup", "Checkup"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("description", models.TextField(null=True)),
                ("cost", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hms.patient"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmergencyCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "referred_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "referrer_contact",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "emergency_type",
                    models.CharField(
                        choices=[
                            ("accident", "Accident"),
                            ("cardiac", "Cardiac Arrest"),
                            ("stroke", "Stroke"),
                            ("respiratory", "Respiratory Emergency"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("case_description", models.TextField()),
                (
                    "severity",
                    models.IntegerField(default=1, help_text="Severity Level (1-5)"),
                ),
                ("admitted_on", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Admitted", "Admitted"),
                            ("Discharged", "Discharged"),
                        ],
                        default="Pending",
                        max_length=20,
                    ),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="hms.patient"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        help_text="Enter a name for this report", max_length=255
                    ),
                ),
                ("report_file", models.FileField(upload_to="patient_reports/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="hms.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transfer_date", models.DateTimeField(auto_now_add=True)),
                ("transfer_reason", models.TextField()),
                ("transferred_to_hospital", models.CharField(max_length=255)),
                (
                    "doctor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hms.doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers",
                        to="hms.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(null=True)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("payment_date", models.DateTimeField(auto_now_add=True)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("card", "Credit/Debit Card"),
                            ("insurance", "Insurance"),
                            ("bank_transfer", "Bank Transfer"),
                            ("upi", "UPI"),
                            ("cheque", "Cheque"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dose_frequency",
                    models.CharField(
                        choices=[
                            ("OD", "Once a day (OD)"),
                            ("BD", "Twice a day (BD)"),
                            ("TDS", "Three times a day (TDS)"),
                            ("QID", "Four times a day (QID)"),
                            ("SOS", "As needed (SOS)"),
                            ("STAT", "Immediately (STAT)"),
                            ("OTHER", "Other"),
                        ],
                        default="OD",
                        max_length=10,
                    ),
                ),
                (
                    "concentration_mg_per_ml",
                    models.FloatField(
                        blank=True,
                        help_text="Concentration of the medicine (mg/mL)",
                        null=True,
                    ),
                ),
                ("medication", models.CharField(max_length=255)),
                ("dosage", models.CharField(max_length=100)),
                ("timing", models.DateTimeField()),
                (
                    "ipd",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescriptions",
                        to="hms.ipd",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ipd",
            name="room",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"is_available": True},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="hms.room",
            ),
        ),
        migrations.CreateModel(
            name="AccountingRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("income", "Income"), ("expense", "Expense")],
                        max_length=10,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("opd", "OPD"),
                            ("ipd", "IPD"),
                            ("emergency", "Emergency"),
                            ("salary", "Salary"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("description", models.TextField(blank=True, null=True)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="salary_payments",
                        to="hms.employee",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="financial_records",
                        to="hms.patient",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="room_charges",
                        to="hms.room",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role_description", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NICUMedicationRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "route",
                    models.CharField(
                        choices=[
                            ("IV", "Intravenous (IV)"),
                            ("IM", "Intramuscular (IM)"),
                            ("SC", "Subcutaneous (SC)"),
                            ("PO", "Oral (PO)"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "dilution_volume",
                    models.FloatField(
                        blank=True,
                        help_text="User-defined dilution volume (mL)",
                        null=True,
                    ),
                ),
                (
                    "calculated_dose_per_day",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "calculated_dose_per_dose",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "calculated_diluent_volume",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "calculated_infusion_rate",
                    models.FloatField(editable=False, null=True),
                ),
                ("total_volume_ml", models.FloatField(editable=False, null=True)),
                (
                    "calculated_dose_per_hour",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "calculated_mg_per_kg_per_dose",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "calculated_ml_per_kg_per_dose",
                    models.FloatField(editable=False, null=True),
                ),
                ("calculated_ml", models.FloatField(editable=False, null=True)),
                ("frequency_of_dose", models.IntegerField(blank=True, null=True)),
                (
                    "frequency_of_dose_given",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "take_from_medicine_vial",
                    models.FloatField(editable=False, null=True),
                ),
                (
                    "calculated_dose_per_dose_ml",
                    models.FloatField(editable=False, null=True),
                ),
                ("dose_per_day_mg", models.FloatField(editable=False, null=True)),
                ("take", models.FloatField(editable=False, null=True)),
                ("set_in_mchine", models.FloatField(editable=False, null=True)),
                (
                    "dose_frequency",
                    models.CharField(
                        choices=[
                            ("OD", "Once a day (OD)"),
                            ("BD", "Twice a day (BD)"),
                            ("TDS", "Three times a day (TDS)"),
                            ("QID", "Four times a day (QID)"),
                            ("SOS", "As needed (SOS)"),
                            ("STAT", "Immediately (STAT)"),
                            ("OTHER", "Other"),
                        ],
                        default="OD",
                        max_length=10,
                    ),
                ),
                (
                    "other_frequency",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sign",
                    models.CharField(
                        help_text="Doctor's Signature", max_length=100, null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "diluent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hms.diluent",
                    ),
                ),
                (
                    "ipd_admission",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nicu_medications",
                        to="hms.ipd",
                    ),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hms.medicine"
                    ),
                ),
                (
                    "medicine_vial",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hms.medicinevial",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hms.patient"
                    ),
                ),
                (
                    "prescription",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Prescription",
                        to="hms.prescription",
                    ),
                ),
                (
                    "vial",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hms.vial",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("completed", "Completed"),
                            ("canceled", "Canceled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="hms.doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="hms.patient",
                    ),
                ),
            ],
            options={
                "unique_together": {("doctor", "date", "patient")},
            },
        ),
    ]
